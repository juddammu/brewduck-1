<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Fermentable">

    <select id="Fermentable.selectFermentableGroupList" resultType="Fermentable">
        SELECT
            0 SEQ,
            '곡물 - Grain' AS NAME,
            '0' TYPE,
            '곡물 - Grain' typeKorean,
            '' originKorean,
            '' color,
            'Y' titleYn,
            'N' endTitleYn
           FROM DUAL
   UNION ALL
        SELECT
            A.SEQ,
            A.NAME,
            A.TYPE,
            (select B.attribute1desc
                  from common_code B
                 where common_set = 'fermentable_type'
                   and A.type = B.common_code) as typeKorean,
	       (select B.attribute1desc
                  from common_code B
                 where common_set = 'nation_code'
                   and A.origin = B.common_code) as originKorean,
            A.color               color,
           'N' AS titleYn,
           'N' endTitleYn
          FROM FERMENTABLE A
         WHERE A.TYPE = 0
   UNION ALL
        SELECT
            0 SEQ,
            '' AS NAME,
            '1' TYPE,
            '' typeKorean,
            '' originKorean,
            '' color,
            'Y' titleYn,
            'Y' endTitleYn
          FROM DUAL
   UNION ALL
        SELECT
            0 SEQ,
            '추출물' AS NAME,
            '1' TYPE,
            '추출물' typeKorean,
            '' originKorean,
            '' color,
            'Y' titleYn,
            'N' endTitleYn
           FROM DUAL
   UNION ALL
        SELECT
            A.SEQ,
            A.NAME,
            A.TYPE,
            (select B.attribute1desc
                  from common_code B
                 where common_set = 'fermentable_type'
                   and A.type = B.common_code) as typeKorean,
	       (select B.attribute1desc
                  from common_code B
                 where common_set = 'nation_code'
                   and A.origin = B.common_code) as originKorean,
           A.color               color,
           'N' AS titleYn,
           'N' endTitleYn
          FROM FERMENTABLE A
         WHERE A.TYPE = 1
   UNION ALL
        SELECT
            0 SEQ,
            '' AS NAME,
            '1' TYPE,
            '' typeKorean,
            '' originKorean,
            '' color,
            'Y' titleYn,
            'Y' endTitleYn
          FROM DUAL
   UNION ALL
        SELECT
            0 SEQ,
            '당 - SUGAR' AS NAME,
            '2' TYPE,
            '당 - SUGAR' typeKorean,
            '' originKorean,
            '' color,
            'Y' titleYn,
           'N' endTitleYn
          FROM DUAL
   UNION ALL
        SELECT
            A.SEQ,
            A.NAME,
            A.TYPE,
            (select B.attribute1desc
                  from common_code B
                 where common_set = 'fermentable_type'
                   and A.type = B.common_code) as typeKorean,
	       (select B.attribute1desc
                  from common_code B
                 where common_set = 'nation_code'
                   and A.origin = B.common_code) as originKorean,
           A.color               color,
           'N' AS titleYn,
           'N' endTitleYn
          FROM FERMENTABLE A
         WHERE A.TYPE = 2
   UNION ALL
        SELECT
            0 SEQ,
            '' AS NAME,
            '1' TYPE,
            '' typeKorean,
            '' originKorean,
            '' color,
            'Y' titleYn,
            'Y' endTitleYn
          FROM DUAL
   UNION ALL
        SELECT
            0 SEQ,
            'ADJUST' AS NAME,
            '3' TYPE,
            'ADJUST' typeKorean,
            '' originKorean,
            '' color,
            'Y' titleYn,
            'N' endTitleYn
          FROM DUAL
   UNION ALL
        SELECT
            A.SEQ,
            A.NAME,
            A.TYPE,
            (select B.attribute1desc
                  from common_code B
                 where common_set = 'fermentable_type'
                   and A.type = B.common_code) as typeKorean,
	       (select B.attribute1desc
                  from common_code B
                 where common_set = 'nation_code'
                   and A.origin = B.common_code) as originKorean,
            A.color               color,
           'N' AS titleYn,
           'N' endTitleYn
          FROM FERMENTABLE A
         WHERE A.TYPE = 3
   UNION ALL
        SELECT
            0 SEQ,
            '' AS NAME,
            '1' TYPE,
            '' typeKorean,
            '' originKorean,
            '' color,
            'Y' titleYn,
            'Y' endTitleYn
   UNION ALL
        SELECT
            0 SEQ,
            'DRY EXTRACT' AS NAME,
            '4' TYPE,
            'DRY EXTRACT' typeKorean,
            '' originKorean,
            '' color,
            'Y' titleYn,
            'N' endTitleYn
          FROM DUAL
   UNION ALL
        SELECT
            A.SEQ,
            A.NAME,
            A.TYPE,
            (select B.attribute1desc
                  from common_code B
                 where common_set = 'fermentable_type'
                   and A.type = B.common_code) as typeKorean,
	       (select B.attribute1desc
                  from common_code B
                 where common_set = 'nation_code'
                   and A.origin = B.common_code) as originKorean,
            A.color               color,
            'N' AS titleYn,
            'N' endTitleYn
          FROM FERMENTABLE A
         WHERE A.TYPE = 4
   UNION ALL
        SELECT
            0 SEQ,
            '' AS NAME,
            '4' TYPE,
            '' typeKorean,
            '' originKorean,
            '' color,
            'Y' titleYn,
            'Y' endTitleYn
          FROM DUAL
    </select>

    <sql id="Fermentable.selectFermentable">
        SELECT
               A.name                name
              ,A.name                titleInUrl
              ,A.seq                 seq
              ,A.korean_name         koreanName
              ,A.version             version
              ,A.type                type
              ,(select B.attribute1desc
                  from common_code B
                 where common_set = 'fermentable_type'
                   and A.type = B.common_code) as typeKorean
              ,A.amount              amount
              ,A.yield               yield
              ,A.color               color
              ,A.add_after_boil      addAfterBoil
              ,A.origin           origin
             ,(select B.attribute1desc
                  from common_code B
                 where common_set = 'nation_code'
                   and A.origin = B.common_code) as originKorean
              ,A.supplier            supplier
              ,A.notes               notes
              ,A.coarse_fine_diff    coarseFineDiff
              ,A.moisture            moisture
              ,A.diastatic_power     diastaticPower
              ,A.protein             protein
              ,A.max_in_batch        maxInBatch
              ,A.recommend_mash      recommendMash
              ,A.ibu_gal_per_lb      ibuGalPerLb
              ,A.insert_id           insertId
              ,A.insert_date         insertDate
              ,A.update_id           updateId
              ,A.update_date         updateDate
              ,A.delete_id           deleteId
              ,A.delete_date         deleteDate
          FROM brewduckdb.FERMENTABLE A
    </sql>

    <sql id="Fermentable.selectRecipeFermentable">
        SELECT
               b.name                name
              ,b.korean_name         koreanName
              ,b.version             version
              ,a.amount              amount
              ,a.fermentable_use     fermentableUse
              ,a.type                type
              ,b.yield               yield
              ,b.color               color
              ,b.add_after_boil      addAfterBoil
              ,b.origin              origin
              ,b.supplier            supplier
              ,b.notes               notes
              ,b.coarse_fine_diff    coarseFineDiff
              ,b.moisture            moisture
              ,b.diastatic_power     diastaticPower
              ,b.protein             protein
              ,b.max_in_batch        maxInBatch
              ,b.recommend_mash      recommendMash
              ,b.ibu_gal_per_lb      ibuGalPerLb
              ,b.insert_id           insertId
              ,b.insert_date         insertDate
              ,b.update_id           updateId
              ,b.update_date         updateDate
              ,b.delete_id           deleteId
              ,b.delete_date         deleteDate
          FROM brewduckdb.RECIPE_FERMENTABLE a
              LEFT OUTER join brewduckdb.FERMENTABLE b on a.seq = b.seq
         WHERE a.seq = b.seq
    </sql>

    <select id="Fermentable.selectFermentableList" parameterType="Fermentable" resultType="Fermentable">
        <!-- 맥주 맥아 목록 조회 -->
        <include refid="Fermentable.selectFermentable" />
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="name != null">
                AND (NAME like CONCAT('%', #{name}, '%')
                OR korean_name like CONCAT('%', #{name}, '%'))
            </if>
            <choose>
                <when test="origin == 'ETC'">
                    AND ORIGIN != 'US' AND ORIGIN != 'DE' AND ORIGIN != 'UK' AND ORIGIN != 'BE' AND ORIGIN != 'CA'
                </when>
                <when test="origin == ''">

                </when>
                <when test="origin != null">
                    AND origin = #{origin}
                </when>
                <otherwise>

                </otherwise>
            </choose>
            AND delete_id IS NULL
        </trim>
    </select>

    <select id="Fermentable.selectRecipeFermentableList" parameterType="String" resultType="Fermentable">
        <!-- 맥주 레시피 맥아 목록 조회 -->
        <include refid="Fermentable.selectRecipeFermentable" />
          AND a.recipe_seq = #{seq}
          AND b.delete_id IS NULL
    </select>

    <select id="Fermentable.selectFermentableDetail" parameterType="Fermentable" resultType="Fermentable">
        <!-- 맥주 맥아 상세 조회 -->
        <include refid="Fermentable.selectFermentable" />
        WHERE delete_id IS NULL
        <if test="seq != null">
            AND seq = #{seq}
        </if>
        <if test="name != null">
            AND name = #{name}
        </if>
        <if test="type != null">
            AND type = #{type}
        </if>
    </select>

    <select id="Fermentable.countFermentableOrigin" resultType="Fermentable">
         SELECT
        (SELECT COUNT(*) FROM FERMENTABLE WHERE ORIGIN = 'US') usCnt,
        (SELECT B.attribute1desc
           FROM common_code B
          WHERE common_set = 'nation_code'
            AND B.common_code = 'US') as usCntName,
        (SELECT COUNT(*) FROM FERMENTABLE WHERE ORIGIN = 'DE') deCnt,
        (SELECT B.attribute1desc
           FROM common_code B
          WHERE common_set = 'nation_code'
            AND B.common_code = 'DE') as deCntName,
        (SELECT COUNT(*) FROM FERMENTABLE WHERE ORIGIN = 'UK') ukCnt,
        (SELECT B.attribute1desc
           FROM common_code B
          WHERE common_set = 'nation_code'
            AND B.common_code = 'UK') as ukCntName,
        (SELECT COUNT(*) FROM FERMENTABLE WHERE ORIGIN = 'BE') beCnt,
        (SELECT B.attribute1desc
           FROM common_code B
          WHERE common_set = 'nation_code'
            AND B.common_code = 'BE') as beCntName,
        (SELECT COUNT(*) FROM FERMENTABLE WHERE ORIGIN = 'CA') caCnt,
        (SELECT B.attribute1desc
           FROM common_code B
          WHERE common_set = 'nation_code'
            AND B.common_code = 'CA') as caCntName,
        (SELECT COUNT(*) FROM FERMENTABLE WHERE ORIGIN != 'US' AND ORIGIN != 'DE' AND ORIGIN != 'UK' AND ORIGIN != 'BE' AND ORIGIN != 'CA') etcCnt,
        (SELECT B.attribute1desc
           FROM common_code B
          WHERE common_set = 'nation_code'
            AND B.common_code = 'ETC') as etcCntName
        FROM DUAL
    </select>

    <insert id="Fermentable.insertFermentable" parameterType="Fermentable">
        <!-- 맥주 맥아 저장 -->
        INSERT INTO brewduckdb.FERMENTABLE (
             name
            ,korean_name
            ,version
            ,type
            ,amount
            ,yield
            ,color
            ,add_after_boil
            ,origin
            ,supplier
            ,notes
            ,coarse_fine_diff
            ,moisture
            ,diastatic_power
            ,protein
            ,max_in_batch
            ,recommend_mash
            ,ibu_gal_per_lb
            ,insert_id
            ,insert_date
        ) VALUES (
             #{name}
            ,#{koreanName}
            ,#{version}
            ,#{type}
            ,#{amount}
            ,#{yield}
            ,#{color}
            ,#{addAfterBoil}
            ,#{origin}
            ,#{supplier}
            ,#{notes}
            ,#{coarseFineDiff}
            ,#{moisture}
            ,#{diastaticPower}
            ,#{protein}
            ,#{maxInBatch}
            ,#{recommendMash}
            ,#{ibuGalPerLb}
            ,#{insertId}
            ,now()
        )
    </insert>

    <update id="updateFermentable" parameterType="Fermentable">
        <!-- 맥주 맥아 수정 -->
        UPDATE brewduckdb.FERMENTABLE
        <trim prefix="SET" suffixOverrides=",">
            <if test="koreanName != null">
                korean_name = #{koreanName},
            </if>
            <if test="version != null">
                version = #{version}
            </if>
            <if test="type != null">
                type = #{type}
            </if>
            <if test="amount != null">
                amount = #{amount}
            </if>
            <if test="yield != null">
                yield = #{yield}
            </if>
            <if test="color != null">
                color = #{color}
            </if>
            <if test="addAfterBoil != null">
                add_after_boil = #{addAfterBoil}
            </if>
            <if test="origin != null">
                origin = #{origin}
            </if>
            <if test="supplier != null">
                supplier = #{supplier}
            </if>
            <if test="notes != null">
                notes = #{notes}
            </if>
            <if test="coarseFineDiff != null">
                coarse_fine_diff = #{coarseFineDiff}
            </if>
            <if test="moisture != null">
                moisture = #{moisture}
            </if>
            <if test="diastaticPower != null">
                diastatic_power = #{diastaticPower}
            </if>
            <if test="protein != null">
                protein = #{protein}
            </if>
            <if test="maxInBatch != null">
                max_in_batch = #{maxInBatch}
            </if>
            <if test="recommendMash != null">
                recommend_mash = #{recommendMash}
            </if>
            <if test="ibuGalPerLb != null">
                ibu_gal_per_lb = #{ibuGalPerLb}
            </if>
            <if test="updateId != null">
                update_id = #{updateId},
            </if>
            <if test="updateId != null">
                update_date = now()
            </if>
        </trim>
        WHERE name = #{name}
    </update>

    <update id="deleteFermentable" parameterType="Fermentable">
        <!-- 맥주 맥아 삭제 -->
        UPDATE brewduckdb.FERMENTABLE
           SET delete_id = #{deleteId}
              ,delete_date = now()
         WHERE name = #{name}
    </update>

</mapper>
