<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Yeast">

    <sql id="Yeast.selectYeast">
        SELECT
               id                  id
              ,name               name
              ,name               titleInUrl
              ,korean_name         koreanName
              ,version             version
              ,(select B.id
                  from BOARD_MASTER B
                where B.NAME = 'Yeast Board') as cmtBbsId
              ,(select B.NAME
                  from COMMON_CODE B
                 where common_set = 'yeast_type'
                   and A.type_code = B.common_code) as typeCode
              ,(select B.name
                  from COMMON_CODE B
                 where common_set = 'form_code'
                   and A.form_code = B.common_code) as formCode
              /*,amount              amount*/
              /*,amount_is_weight    amountIsWeight*/
              ,laboratory          laboratory
              ,product_id          productId
              ,min_temperature     minTemperature
              ,max_temperature     maxTemperature
              ,flocculation        flocculation
              /*,attenuation         attenuation*/
              ,notes               notes
              ,best_for            bestFor
              ,times_cultured      timesCultured
              ,max_reuse           maxReuse
              ,add_to_secondary    addToSecondary
              ,insert_id           insertId
              ,insert_date         insertDate
              ,update_id           updateId
              ,update_date         updateDate
              ,delete_id           deleteId
              ,delete_date         deleteDate
              /*,max_attenuation     maxAttenuation
              ,min_attenuation     minAttenuation*/
          FROM YEASTS A
    </sql>

    <sql id="Yeast.selectRecipeYeast">
      SELECT
           b.name                name
          ,b.korean_name         koreanName
          ,b.version             version
          ,b.TYPE_CODE           typeCode
          ,b.form_code           formCode
          ,COALESCE(a.RECIPE_LABORATORY, b.laboratory) laboratory
          ,COALESCE(a.RECIPE_PRODUCT_ID, b.product_id) productId
          ,b.min_temperature     minTemperature
          ,b.max_temperature     maxTemperature
          ,b.flocculation        flocculation
          ,COALESCE(a.RECIPE_ATTENUATION, (b.min_temperature+b.max_temperature)/2) attenuation
          ,b.notes               notes
          ,b.best_for            bestFor
          ,b.times_cultured      timesCultured
          ,b.max_reuse           maxReuse
          ,b.add_to_secondary    addToSecondary
          ,b.insert_id           insertId
          ,b.insert_date         insertDate
          ,b.update_id           updateId
          ,b.update_date         updateDate
          ,b.delete_id           deleteId
          ,b.delete_date         deleteDate
        FROM RECIPES_YEASTS a
              LEFT OUTER join YEASTS b on a.YEAST_ID = b.id
         WHERE a.YEAST_ID = b.id
    </sql>

    <select id="Yeast.selectYeastList" parameterType="Yeast" resultType="Yeast">
        <!-- 맥주 이스트 목록 조회 -->
        <include refid="Yeast.selectYeast"/>
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="name != null">
                AND (NAME like CONCAT('%', #{name}, '%')
                OR korean_name like CONCAT('%', #{name}, '%'))
            </if>
            <if test="typeCode != null and typeCode != 0">AND type_code = #{typeCode}</if>
            AND delete_id IS NULL
        </trim>
    </select>

    <select id="Yeast.selectRecipeYeastList" parameterType="Yeast" resultType="Yeast">
        <!-- 맥주 레시피 이스트 목록 조회 -->
        <include refid="Yeast.selectRecipeYeast"/>
        AND a.recipe_id = #{id}
        AND a.brewer_id = #{brewerId}
        AND b.delete_id IS NULL
    </select>

    <select id="Yeast.selectTypeList" parameterType="Yeast" resultType="Yeast">
        <!-- 맥주 이스트 타입 조회 -->
        SELECT
        type
        ,(select B.name
        from common_code B
        where common_set = 'yeast_type'
        and A.type = B.common_code) as typeName
        FROM YEAST
        WHERE delete_id IS NULL
        <if test="seq != null">SEQ = #{seq}</if>
    </select>

    <select id="Yeast.selectYeastDetail" parameterType="Yeast" resultType="Yeast">
        <!-- 맥주 이스트 상세 조회 -->
        <include refid="Yeast.selectYeast"/>
        WHERE delete_id IS NULL
        <if test="id != null">
            AND id = #{id}
        </if>
        <if test="name != null">
            AND name = #{name}
        </if>
        <if test="typeCode != null">
            AND type_code = #{typeCode}
        </if>
    </select>

    <select id="Yeast.countYeastType" resultType="Yeast">
         SELECT
        (SELECT COUNT(*) FROM YEASTS WHERE TYPE_CODE = '1') aleCnt,
        (SELECT B.name
           FROM COMMON_CODE B
          WHERE common_set = 'yeast_type'
          AND B.common_code = '1') as aleCntName,
        (SELECT COUNT(*) FROM YEASTS WHERE TYPE_CODE = '3') lagerCnt,
        (SELECT B.name
           FROM COMMON_CODE B
          WHERE common_set = 'yeast_type'
          AND B.common_code = '3') as lagerCntName,
        (SELECT COUNT(*) FROM YEASTS WHERE TYPE_CODE = '4') wheatCnt,
        (SELECT B.name
           FROM COMMON_CODE B
          WHERE common_set = 'yeast_type'
          AND B.common_code = '4') as wheatCntName,
        (SELECT COUNT(*) FROM YEASTS WHERE TYPE_CODE = '5') wineCnt,
        (SELECT B.name
           FROM COMMON_CODE B
          WHERE common_set = 'yeast_type'
          AND B.common_code = '5') as wineCntName,
        (SELECT COUNT(*) FROM YEASTS WHERE TYPE_CODE = '2') champagneCnt,
        (SELECT B.name
           FROM COMMON_CODE B
          WHERE common_set = 'yeast_type'
          AND B.common_code = '2') as champagneCntName
        FROM DUAL
    </select>

    <insert id="Yeast.insertYeast" parameterType="Yeast">
        <!-- 맥주 이스트 저장 -->
        INSERT INTO brewduckdb.YEAST (
        name
        ,korean_name
        ,version
        ,type
        ,form
        ,amount
        ,amount_is_weight
        ,laboratory
        ,product_id
        ,min_temperature
        ,max_temperature
        ,flocculation
        ,attenuation
        ,notes
        ,best_for
        ,times_cultured
        ,max_reuse
        ,add_to_secondary
        ,insert_id
        ,insert_date
        ) VALUES (
        #{name}
        ,#{koreanName}
        ,#{version}
        ,#{type}
        ,#{form}
        ,#{amount}
        ,#{amountIsWeight}
        ,#{laboratory}
        ,#{productId}
        ,#{minTemperature}
        ,#{maxTemperature}
        ,#{flocculation}
        ,#{attenuation}
        ,#{notes}
        ,#{bestFor}
        ,#{timesCultured}
        ,#{maxReuse}
        ,#{addToSecondary}
        ,#{insertId}
        ,now()
        )
    </insert>

    <update id="updateYeast" parameterType="Yeast">
        <!-- 맥주 이스트 수정 -->
        UPDATE brewduckdb.YEAST
        <trim prefix="SET" suffixOverrides=",">
            <if test="koreanName != null">
                korean_name = #{koreanName},
            </if>
            <if test="version != null">
                version = #{version}
            </if>
            <if test="type != null">
                type = #{type}
            </if>
            <if test="form != null">
                form = #{form}
            </if>
            <if test="amount != null">
                amount = #{amount}
            </if>
            <if test="amountIsWeight != null">
                amount_is_weight = #{amountIsWeight}
            </if>
            <if test="laboratory != null">
                laboratory = #{laboratory}
            </if>
            <if test="productId != null">
                product_id = #{productId}
            </if>
            <if test="minTemperature != null">
                min_temperature = #{minTemperature}
            </if>
            <if test="maxTemperature != null">
                max_temperature = #{maxTemperature}
            </if>
            <if test="flocculation != null">
                flocculation = #{flocculation}
            </if>
            <if test="attenuation != null">
                attenuation = #{attenuation}
            </if>
            <if test="notes != null">
                notes = #{notes}
            </if>
            <if test="bestFor != null">
                best_for = #{bestFor}
            </if>
            <if test="timesCultured != null">
                times_cultured = #{timesCultured}
            </if>
            <if test="maxReuse != null">
                max_reuse = #{maxReuse}
            </if>
            <if test="addToSecondary != null">
                add_to_secondary = #{addToSecondary}
            </if>
            <if test="updateId != null">
                update_id = #{updateId},
            </if>
            <if test="updateId != null">
                update_date = now()
            </if>
        </trim>
        WHERE name = #{name}
    </update>

    <update id="deleteYeast" parameterType="Yeast">
        <!-- 맥주 이스트 삭제 -->
        UPDATE brewduckdb.YEAST
        SET delete_id = #{deleteId}
        ,delete_date = now()
        WHERE name = #{name}
    </update>

</mapper>
