<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Recipe">

    <sql id="Recipe.selectRecipe">
        SELECT
           id                   id
          ,name                  name
          ,status                status
          ,name                  titleInUrl
          ,version               version
          ,type_code             typeCode
          ,style_id              styleId
          ,(SELECT B.KOREAN_NAME FROM STYLES B WHERE style_id = B.id) styleName
          ,(SELECT B.STYLE_LETTER FROM STYLES B WHERE style_id = B.id) styleLetter
          ,brewer_id             brewerId
          ,(SELECT C.name FROM ACCOUNT C WHERE C.id = brewer_id) brewerNm
          ,asst_brewer_id        asstBrewerId
          ,batch_size            batchSize
          ,boil_size             boilSize
          ,boil_time             boilTime
          ,efficiency            efficiency
          ,notes                 notes
          ,substring(notes, 1, 60)    shortNotes
          ,og                    og
          ,fg                    fg
          ,PRIMARY_FERMENTATION_TIME           primaryFermentationTime
          ,PRIMARY_FERMENTATION_TEMP          primaryFermentationTemp
          ,SECONDARY_FERMENTATION_TIME         secondaryFermentationTime
          ,SECONDARY_FERMENTATION_TEMP        secondaryFermentationTemp
          ,AGE_TIME                   ageTime
          ,age_temp              ageTemp
          ,insert_id             insertId
          ,substring(insert_date, 1, 10)  insertDate
          ,update_id             updateId
          ,update_date           updateDate
          ,delete_id             deleteId
          ,delete_date           deleteDate
        FROM RECIPES
    </sql>

    <sql id="Recipe.categoryList">
        SELECT
            A.seq                    seq
            ,A.name                  name
            ,A.name                  titleInUrl
            ,A.version               version
            ,A.type                  type
            ,A.style_seq             styleSeq
            ,(SELECT B.KOREAN_NAME FROM STYLE B WHERE style_seq = B.SEQ) styleName
            ,A.brewer                brewerId
            ,(SELECT C.name FROM account C WHERE C.id = brewer) brewerNm
            ,A.asst_brewer           asstBrewer
            ,A.batch_size            batchSize
            ,A.boil_size             boilSize
            ,A.boil_time             boilTime
            ,A.efficiency            efficiency
            ,A.notes                 notes
            ,A.og                    og
            ,A.fg                    fg
            ,A.primary_age           primaryAge
            ,A.primary_temp          primaryTemp
            ,A.secondary_age         secondaryAge
            ,A.secondary_temp        secondaryTemp
            ,A.age                   age
            ,A.age_temp              ageTemp
            ,A.priming_sugar_name    primingSugarName
            ,A.read_count            readCount
            ,A.atch_file_id          atchFileId
            ,A.atch_cover_file_id    atchCoverFileId
            ,(SELECT B.FILENAME FROM FILEINFO B WHERE atch_file_id = B.SEQ) atchFileName
            ,(SELECT C.FILENAME FROM FILEINFO C WHERE atch_cover_file_id = C.SEQ) atchCoverFileName
            ,substring(A.insert_date, 1, 10)  insertDate
            ,A.update_id             updateId
            ,A.update_date           updateDate
            ,A.delete_id             deleteId
            ,A.delete_date           deleteDate
        FROM brewduckdb.RECIPE A
        LEFT JOIN brewduckdb.STYLE B on B.seq = A.style_seq
        WHERE A.delete_id IS NULL
          AND A.status = 2
    </sql>

    <select id="Recipe.searchRecipeList" parameterType="Recipe" resultType="Recipe">
        <include refid="Recipe.selectRecipe"/>
        <if test="name != null">
            WHERE name LIKE CONCAT('%', #{name}, '%')
        </if>
        AND delete_id IS NULL
        AND status = 2
    </select>

    <select id="Recipe.selectRecipeList" parameterType="Recipe" resultType="Recipe">
        select
        R.*
        ,IFNULL((SELECT 1 FROM RECIPES_FERMENTABLES A WHERE A.brewer_id = R.brewerId AND A.recipe_id =
        R.id LIMIT 1),0)
        +IFNULL((SELECT 1 FROM RECIPES_YEASTS A WHERE A.brewer_id = R.brewerId AND A.recipe_id = R.id
        LIMIT 1),0)
        +IFNULL((SELECT 1 FROM RECIPES_HOPS A WHERE A.brewer_id = R.brewerId AND A.recipe_id = R.id
        LIMIT 1),0) as completeness
        FROM (
        <include refid="Recipe.selectRecipe"/>
        WHERE delete_id IS NULL
        <if test="brewerId != null">
            AND brewer_id = #{brewerId}
        </if>
        <if test="status != null">
            AND STATUS = #{status}
        </if>
        ORDER BY id desc ) R
    </select>

    <select id="Recipe.selectNewPublicRecipeList" parameterType="Recipe" resultType="Recipe">
        <include refid="Recipe.selectRecipe"/>
        WHERE delete_id IS NULL
        <if test="status != null">
            AND STATUS = #{status}
        </if>
        <if test="mainDisplayYn != null">
            AND MAIN_DISPLAY_YN = #{mainDisplayYn}
        </if>
        ORDER BY insert_date desc
        <if test="limit != null">
            LIMIT #{limit}
        </if>

    </select>

    <select id="Recipe.selectPublicRecipeMenuList" parameterType="Recipe" resultType="Recipe">
        <include refid="Recipe.selectRecipe"/>
        WHERE delete_id IS NULL
        AND STATUS = 2
        AND ATCH_FILE_ID IS NOT NULL
        AND style_seq IN
        <foreach item="a" collection="styleSeqs" open="(" separator="," close=")">
            #{a}
        </foreach>
        ORDER BY insert_date
        LIMIT 4
    </select>

    <select id="Recipe.selectRecipeSeq" parameterType="Recipe" resultType="Recipe">
      SELECT IFNULL(MAX(ID)+1,1) as id
        FROM RECIPES
       WHERE brewer_id =  #{brewerId}
    </select>

    <select id="Recipe.selectRecipeDetail" parameterType="Recipe" resultType="Recipe">
        <!-- 맥주 레시피 상세 조회 -->
        <include refid="Recipe.selectRecipe"/>
        WHERE delete_id IS NULL
        <if test="id != null">
            AND id = #{id}
        </if>
        <if test="name != null">
            AND name = #{name}
        </if>
        <if test="typeCode != null">
            AND typeCode = #{typeCode}
        </if>
        <if test="brewerId != null">
            AND brewer_id = #{brewerId}
        </if>
        <if test="insertId != null">
            AND insert_id = #{insertId}
        </if>
    </select>


    <select id="Recipe.selectCategoryMain" parameterType="Recipe" resultType="Recipe">
        SELECT A.SEQ              seq
               ,A.CATEGORY        category
               ,A.CATEGORY_NUMBER categoryNumber
          FROM STYLE A, STYLE_TEMP B
          WHERE A.name = B.NAME
          AND A.CATEGORY_NUMBER = #{seq}
          LIMIT 1
    </select>

    <select id="Recipe.selectCategoryList" parameterType="Recipe" resultType="Recipe">
        select
        R.*
        ,IFNULL((SELECT 1 FROM RECIPE_FERMENTABLE A WHERE A.brewer = R.brewer AND A.recipe_seq =
        R.seq LIMIT 1),0)
        +IFNULL((SELECT 1 FROM RECIPE_YEAST A WHERE A.brewer = R.brewer AND A.recipe_seq = R.seq
        LIMIT 1),0)
        +IFNULL((SELECT 1 FROM RECIPE_HOPS A WHERE A.brewer = R.brewer AND A.recipe_seq = R.seq
        LIMIT 1),0) as completeness
        FROM (
        <include refid="Recipe.categoryList"/>
        <if test="styleCategory != null">
            AND B.category_number = #{styleCategory}
        </if>
        ORDER BY seq desc ) R
    </select>


    <select id="Recipe.selectCategoryDetail" parameterType="Recipe" resultType="Recipe">
        <!-- 맥주 레시피 상세 조회 -->
        <include refid="Recipe.categoryList"/>
        <if test="seq != null">
            AND A.seq = #{seq}
        </if>
        <if test="name != null">
            AND A.name = #{name}
        </if>
        <if test="brewer != null">
            AND brewer = #{brewer}
        </if>
        <if test="insertId != null">
            AND A.insert_id = #{insertId}
        </if>
    </select>


    <insert id="Recipe.insertRecipe" parameterType="Recipe">
        <!-- 맥주 레시피 저장 -->
        INSERT INTO RECIPES (
        id
        ,name
        ,version
        ,type_code
        ,brewer_id
        ,style_id
        ,asst_brewer_id
        ,batch_size
        ,boil_size
        ,boil_time
        ,efficiency
        ,notes
        ,og
        ,fg
        ,PRIMARY_FERMENTATION_TIME
        ,PRIMARY_FERMENTATION_TEMP
        ,SECONDARY_FERMENTATION_TIME
        ,SECONDARY_FERMENTATION_TEMP
        ,AGE_TIME
        ,AGE_TEMP
        ,insert_id
        ,insert_date
        ) VALUES (
        #{id}
        ,#{name}
        ,#{version}
        ,#{typeCode}
        ,#{brewerId}
        ,#{styleId}
        ,#{asstBrewer}
        ,#{batchSize}
        ,#{boilSize}
        ,#{boilTime}
        ,#{efficiency}
        ,#{notes}
        ,#{og}
        ,#{fg}
        ,#{primaryAge}
        ,#{primaryTemp}
        ,#{secondaryAge}
        ,#{secondaryTemp}
        ,#{age}
        ,#{ageTemp}
        ,#{insertId}
        ,now()
        )
    </insert>

    <update id="updateRecipe" parameterType="Recipe">
        <!-- 맥주 레시피 수정 -->
        UPDATE brewduckdb.RECIPE
        <trim prefix="SET" suffixOverrides=",">
            <if test="status != null">
                status = #{status},
            </if>
            <if test="atchFileId != null">
                atch_file_id = #{atchFileId},
            </if>
            <if test="atchCoverFileId != null">
                atch_cover_file_id = #{atchCoverFileId},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="version != null">
                version = #{version},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="asstBrewer != null">
                asst_brewer = #{asstBrewer},
            </if>
            <if test="batchSize != null">
                batch_size = #{batchSize},
            </if>
            <if test="boilSize != null">
                boil_size = #{boilSize},
            </if>
            <if test="boilTime != null">
                boil_time = #{boilTime},
            </if>
            <if test="efficiency != null">
                efficiency = #{efficiency},
            </if>
            <if test="notes != null">
                notes = #{notes},
            </if>
            <if test="og != null">
                og = #{og},
            </if>
            <if test="fg != null">
                fg = #{fg},
            </if>
            <if test="primaryAge != null">
                primary_age = #{primaryAge},
            </if>
            <if test="primaryTemp != null">
                primary_temp = #{primaryTemp},
            </if>
            <if test="secondaryAge != null">
                secondary_age = #{secondaryAge},
            </if>
            <if test="secondaryTemp != null">
                secondary_temp = #{secondaryTemp},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="ageTemp != null">
                age_temp = #{ageTemp},
            </if>
            <if test="primingSugarName != null">
                priming_sugar_name = #{primingSugarName},
            </if>
            <!--
                        <if test="updateId != null">
                            read_count = (
                                          SELECT (IFNULL(MAX(name), 0) + 1)  read_count
                                            FROM brewduckdb.RECIPE
                                           WHERE seq  = #{seq}
                                             AND name = #{name}
                                         ),
                        </if>
            -->
            <if test="updateId != null">
                update_id = #{updateId},
            </if>
            <if test="updateId != null">
                update_date = now()
            </if>
        </trim>
        WHERE seq = #{seq}
        AND brewer = #{brewer}
    </update>

    <update id="deleteRecipe" parameterType="Recipe">
        <!-- 맥주 레시피 삭제 -->
        UPDATE brewduckdb.RECIPE
        SET delete_id = #{deleteId}
        ,delete_date = now()
        WHERE id = #{id}
        AND brewer_id = #{brewerId}
    </update>

    <update id="deleteRecipeFermentable" parameterType="Recipe">
        <!-- 맥주 레시피 삭제 -->
        UPDATE brewduckdb.RECIPE_FERMENTABLE
        SET delete_id = #{deleteId}
        ,delete_date = now()
        WHERE recipe_seq = #{seq}
        AND brewer = #{brewer}
    </update>

    <update id="deleteRecipeYeast" parameterType="Recipe">
        <!-- 맥주 레시피 삭제 -->
        UPDATE brewduckdb.RECIPE_YEAST
        SET delete_id = #{deleteId}
        ,delete_date = now()
        WHERE recipe_seq = #{seq}
        AND brewer = #{brewer}
    </update>

    <update id="deleteRecipeHops" parameterType="Recipe">
        <!-- 맥주 레시피 삭제 -->
        UPDATE brewduckdb.RECIPE_HOPS
        SET delete_id = #{deleteId}
        ,delete_date = now()
        WHERE recipe_seq = #{seq}
        AND brewer = #{brewer}
    </update>

    <update id="deleteRecipeMisc" parameterType="Recipe">
        <!-- 맥주 레시피 삭제 -->
        UPDATE brewduckdb.RECIPE_MISC
        SET delete_id = #{deleteId}
        ,delete_date = now()
        WHERE recipe_seq = #{seq}
        AND brewer = #{brewer}
    </update>

    <insert id="Recipe.insertRecipeFermentable" parameterType="Recipe">
        INSERT INTO brewduckdb.RECIPE_FERMENTABLE (
            recipe_seq
            ,fermentable_seq
            ,amount
            ,fermentable_use
            ,type
            ,brewer
            ,insert_id
            ,insert_date
        ) VALUES (
             #{recipeSeq} -- seq - IN int(11)
            ,#{recipeFermantableSeq} -- fermentable_seq - IN int(11)
            ,#{recipeFermantableAmount} -- amount - IN double
            ,#{recipeFermantableUse}   -- fermentable_use - IN varchar(10)
            ,#{recipeFermantableType}   -- fermentable_use - IN varchar(10)
            ,#{brewer}   -- fermentable_use - IN varchar(10)
            ,#{insertId} -- insert_id - IN varchar(45)
            ,now() -- insert_date - IN timestamp
        )
    </insert>

    <insert id="Recipe.insertRecipeHop" parameterType="Recipe">
        INSERT INTO brewduckdb.RECIPE_HOPS (
             recipe_seq
            ,hops_seq
            ,brewer
            ,amount
            ,hops_use
            ,time
            ,form
            ,alpha
            ,insert_id
            ,insert_date
        ) VALUES (
             #{recipeSeq} -- seq - IN int(11)
            ,#{recipeHopSeq} -- fermentable_seq - IN int(11)
            ,#{brewer}
            ,#{recipeHopAmount} -- amount - IN double
            ,#{recipeHopUse}   -- fermentable_use - IN varchar(10)
            ,#{recipeHopTime}   -- fermentable_use - IN varchar(10)
            ,#{recipeHopForm}   -- fermentable_use - IN varchar(10)
            ,#{recipeHopAlpha}   -- fermentable_use - IN varchar(10)
            ,#{insertId} -- insert_id - IN varchar(45)
            ,now() -- insert_date - IN timestamp
        )
    </insert>

    <insert id="Recipe.insertRecipeYeast" parameterType="Recipe">
        INSERT INTO brewduckdb.RECIPE_YEAST (
            recipe_seq
            ,yeast_seq
            ,brewer
            ,insert_id
            ,insert_date
        ) VALUES (
             #{recipeSeq} -- seq - IN int(11)
            ,#{recipeYeastSeq} -- fermentable_seq - IN int(11)
            ,#{brewer}
            ,#{insertId} -- insert_id - IN varchar(45)
            ,now() -- insert_date - IN timestamp
        )
    </insert>

    <insert id="Recipe.insertRecipeMisc" parameterType="Recipe">
        INSERT INTO brewduckdb.RECIPE_MISC (
             recipe_seq
            ,misc_seq
            ,brewer
            ,amount
            ,time
            ,misc_use
            ,insert_id
            ,insert_date
        ) VALUES (
             #{recipeSeq} -- seq - IN int(11)
            ,#{recipeMiscSeq} -- fermentable_seq - IN int(11)
            ,#{brewer}
            ,#{recipeMiscAmount} -- amount - IN double
            ,#{recipeMiscTime}   -- fermentable_use - IN varchar(10)
            ,#{recipeMiscUse}   -- fermentable_use - IN varchar(10)
            ,#{insertId} -- insert_id - IN varchar(45)
            ,now() -- insert_date - IN timestamp
        )
    </insert>

    <insert id="writeReply" parameterType="Board">
        INSERT INTO RECIPE_COMMENT(
           USER_ID
          ,RECIPE_ID
          ,ANSWER_NO
          ,WRTER_ID
          ,WRTER_NM
          ,ANSWER
          ,PARNTSCTT_NO
          ,INSERT_DATE
          ,INSERT_ID
        ) VALUES (
           #{userId}
          ,#{recipeId}
          ,(SELECT * FROM (SELECT CASE COUNT(*) WHEN 0 THEN 1 ELSE MAX(ANSWER_NO)+1 END
          FROM RECIPE_COMMENT WHERE RECIPE_COMMENT.USER_ID =#{userId}
          AND RECIPE_COMMENT.RECIPE_ID =#{recipeId})NEXT)
          ,#{wrterId}
          ,#{wrterNm}
          ,#{amswer}
          ,#{useAt}
          ,SYSDATE()
          ,#{insertId}
        )
    </insert>

    <select id="selectReplyList" parameterType="Board" resultType="Board">
        SELECT
          ANSWER_NO       answerNo,
          RECIPE_ID       recipeId,
          USER_ID         userId,
          PASSWORD        password,
          UPDATE_ID       updateId,
          UPDATE_DATE     updateDate,
          INSERT_ID       insertId,
          INSERT_DATE     insertDate,
          PARNTSCTT_NO    parntscttNo,
          ANSWER          answer,
          WRTER_NM        wrterNm,
          WRTER_ID        wrterId
        FROM RECIPE_COMMENT
        WHERE USER_ID = #{userId}
        AND RECIPE_ID = #{recipeId}
    </select>

    <select id="countReply" parameterType="Board" resultType="Board">

      select COUNT(ANSWER_NO) as countNum
      FROM RECIPE_COMMENT
      WHERE USER_ID = #{userId}
      AND RECIPE_ID = #{recipeId};

    </select>
</mapper>
