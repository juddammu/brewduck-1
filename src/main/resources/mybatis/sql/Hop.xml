<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Hop">

    <sql id="Hop.selectHop">
          SELECT
               A.id               id
              ,A.name             name
              ,trim(A.name)             AS titleInUrl
              ,A.korean_name      koreanName
              ,A.version          version
              ,A.alpha            alpha
              ,A.notes            notes
              ,A.korean_notes     koreanNotes
              ,substring(A.korean_notes, 1, 30)    shortKoreanNotes
              ,A.type_code             typeCode
              ,(select B.NAME
                  from COMMON_CODE B
                 where common_set = 'hop_type'
                   and A.type_code = B.common_code) as typeKorean
              ,A.beta             beta
              ,A.hsi              hsi
              ,A.origin_code           originCode
             ,(select B.NAME
                  from COMMON_CODE B
                 where common_set = 'nation_code'
                   and A.origin_code = B.common_code) as originKorean
              ,A.humulene         humulene
              ,A.caryophyllene    caryophyllene
              ,A.cohumulone       cohumulone
              ,A.myrcene          myrcene
              ,A.insert_id        insertId
              ,A.insert_date      insertDate
              ,A.update_id        updateId
              ,A.update_date      updateDate
              ,A.delete_id        deleteId
              ,A.delete_date      deleteDate
          FROM HOPS A
    </sql>

    <sql id="Hop.selectRecipeHop">
        SELECT
           b.name             name
          ,b.korean_name      koreanName
          ,b.version          version
          ,a.RECIPE_ALPHA            alpha
          ,a.amounts           amounts
          ,a.use_code         useCode
          ,a.time             time
          ,a.time_code        timeCode
          ,b.notes            notes
          ,a.type_code             typeCode
          ,b.beta             beta
          ,b.hsi              hsi
          ,b.origin_code           originCode
        -- ,b.substitutes      substitutes
          ,b.humulene         humulene
          ,b.caryophyllene    caryophyllene
          ,b.cohumulone       cohumulone
          ,b.myrcene          myrcene
          ,b.insert_id        insertId
          ,b.insert_date      insertDate
          ,b.update_id        updateId
          ,b.update_date      updateDate
          ,b.delete_id        deleteId
          ,b.delete_date      deleteDate
        FROM RECIPES_HOPS a
          LEFT OUTER join HOPS b on a.hop_id = b.id
        WHERE a.hop_id = b.id
    </sql>

    <select id="Hop.selectHopList" parameterType="Hop" resultType="Hop">
        <!-- 맥주 홉 목록 조회 -->
        <include refid="Hop.selectHop"/>
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="name != null">
                AND (NAME like CONCAT('%', #{name}, '%')
                OR korean_name like CONCAT('%', #{name}, '%'))
            </if>
            <if test="typeCode != null and typeCode != 0">AND type_code = #{typeCode}</if>
            <choose>
                <when test="originCode == 'ETC'">
                    AND ORIGIN != 'US' AND ORIGIN != 'DE' AND ORIGIN != 'UK' AND ORIGIN != 'NZ' AND
                    ORIGIN != 'AU' AND ORIGIN != 'SI'
                </when>
                <when test="originCode == ''">

                </when>
                <when test="originCode != null">
                    AND origin_code = #{originCode}
                </when>
                <otherwise>

                </otherwise>
            </choose>
            AND delete_id IS NULL
        </trim>
    </select>

    <select id="Hop.selectRecipeHopList" parameterType="Hop" resultType="Hop">
        <!-- 맥주 레시피 홉 목록 조회 -->
        <include refid="Hop.selectRecipeHop"/>
        AND a.recipe_id = #{id}
        AND a.brewer_id = #{brewerId}
        AND b.delete_id IS NULL
    </select>

    <select id="Hop.selectHopDetail" parameterType="Hop" resultType="Hop">
        <!-- 맥주 홉 상세 조회 -->
        <include refid="Hop.selectHop"/>
        WHERE delete_id IS NULL
        <if test="id != null">
            AND id = #{id}
        </if>
        <if test="name != null">
            AND name = #{name}
        </if>

        <if test="typeCode != null">
            AND type_code = #{typeCode}
        </if>
    </select>

    <select id="Hop.selectUtilization" parameterType="Hop" resultType="Hop">
        SELECT utilization
          FROM Utilization
         WHERE gravity = #{gravity}
           AND time = #{time}
    </select>

    <select id="Hop.selectRandomHop" resultType="Hop">
        <!-- 맥주 홉 상세 조회 -->
        <include refid="Hop.selectHop"/>
        WHERE delete_id IS NULL
        ORDER BY rand() LIMIT 1
    </select>


    <select id="Hop.countHopOrigin" resultType="Hop">
         SELECT
        (SELECT COUNT(*) FROM HOPS WHERE ORIGIN = 'US') usCnt,
        (SELECT B.attribute1desc
           FROM common_code B
          WHERE common_set = 'nation_code'
            AND B.common_code = 'US') as usCntName,
        (SELECT COUNT(*) FROM HOPS WHERE ORIGIN = 'DE') deCnt,
        (SELECT B.attribute1desc
           FROM common_code B
          WHERE common_set = 'nation_code'
            AND B.common_code = 'DE') as deCntName,
        (SELECT COUNT(*) FROM HOPS WHERE ORIGIN = 'UK') ukCnt,
        (SELECT B.attribute1desc
           FROM common_code B
          WHERE common_set = 'nation_code'
            AND B.common_code = 'UK') as ukCntName,
        (SELECT COUNT(*) FROM HOPS WHERE ORIGIN = 'NZ') nzCnt,
        (SELECT B.attribute1desc
           FROM common_code B
          WHERE common_set = 'nation_code'
            AND B.common_code = 'NZ') as nzCntName,
        (SELECT COUNT(*) FROM HOPS WHERE ORIGIN = 'AU') auCnt,
        (SELECT B.attribute1desc
           FROM common_code B
          WHERE common_set = 'nation_code'
            AND B.common_code = 'AU') as auCntName,
        (SELECT COUNT(*) FROM HOPS WHERE ORIGIN = 'SI') siCnt,
        (SELECT B.attribute1desc
           FROM common_code B
          WHERE common_set = 'nation_code'
            AND B.common_code = 'SI') as siCntName,
        (SELECT COUNT(*) FROM HOPS WHERE ORIGIN != 'US' AND ORIGIN != 'DE' AND ORIGIN != 'UK' AND ORIGIN != 'NZ' AND ORIGIN != 'AU' AND ORIGIN != 'SI') etcCnt,
        (SELECT B.attribute1desc
           FROM common_code B
          WHERE common_set = 'nation_code'
            AND B.common_code = 'ETC') as etcCntName
        FROM DUAL
    </select>

    <insert id="Hop.insertHop" parameterType="Hop">
        <!-- 맥주 홉 저장 -->
        INSERT INTO HOPS (
        name
        ,korean_name
        ,version
        ,alpha
        ,amount
        ,hops_use
        ,time
        ,notes
        ,type
        ,form
        ,beta
        ,hsi
        ,origin
        ,substitutes
        ,humulene
        ,caryophyllene
        ,cohumulone
        ,myrcene
        ,insert_id
        ,insert_date
        ) VALUES (
        #{name}
        ,#{koreanName}
        ,#{version}
        ,#{alpha}
        ,#{amount}
        ,#{hopsUse}
        ,#{time}
        ,#{notes}
        ,#{type}
        ,#{form}
        ,#{beta}
        ,#{hsi}
        ,#{origin}
        ,#{substitutes}
        ,#{humulene}
        ,#{caryophyllene}
        ,#{cohumulone}
        ,#{myrcene}
        ,#{insertId}
        ,now()
        )
    </insert>

    <update id="Hop.updateHop" parameterType="Hop">
        <!-- 맥주 홉 수정 -->
        UPDATE HOPS
        <trim prefix="SET" suffixOverrides=",">
            <if test="koreanName != null">
                korean_name = #{koreanName},
            </if>
            <if test="alpha != null">
                alpha = #{alpha},
            </if>
            <if test="amount != null">
                amount = #{amount},
            </if>
            <if test="hopsUse != null">
                hops_use = #{hopsUse},
            </if>
            <if test="time != null">
                time = #{time},
            </if>
            <if test="notes != null">
                notes = #{notes},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="form != null">
                form = #{form},
            </if>
            <if test="beta != null">
                beta = #{beta},
            </if>
            <if test="hsi != null">
                hsi = #{hsi},
            </if>
            <if test="origin != null">
                origin = #{origin},
            </if>
            <if test="substitutes != null">
                substitutes = #{substitutes},
            </if>
            <if test="humulene != null">
                humulene = #{humulene},
            </if>
            <if test="caryophyllene != null">
                caryophyllene = #{caryophyllene},
            </if>
            <if test="cohumulone != null">
                cohumulone = #{cohumulone},
            </if>
            <if test="myrcene != null">
                myrcene = #{myrcene},
            </if>
            <if test="updateId != null">
                update_id = #{updateId},
            </if>
            <if test="updateId != null">
                update_date = now()
            </if>
        </trim>
        WHERE name = #{name}
    </update>

    <update id="Hop.deleteHop" parameterType="Hop">
        <!-- 맥주 홉 삭제 -->
        UPDATE HOPS
        SET delete_id = #{deleteId}
        ,delete_date = now()
        WHERE name = #{name}
    </update>

    <update id="Hop.updateViewCount" parameterType="Hop">
        <!-- 맥주 홉 뷰 증가 -->
        UPDATE HOPS
        SET UPDATE_COUNT = UPDATE_COUNT + 1
        WHERE id = #{id}
    </update>

    <select id="Hop.selectHopAromaList" parameterType="Hop" resultType="Hop">
        <!-- 맥주 홉 목록 조회 -->
        SELECT
        AROMA_NAME AS aromaName,
        AROMA_CODE AS aromaCode
        FROM HOPS_AROMA
        WHERE delete_id IS NULL
        AND
        <if test="id != null">id = #{id}</if>
    </select>

    <select id="Hop.selectHopSubstitutesList" parameterType="Hop" resultType="Hop">
        <!-- 맥주 홉 목록 조회 -->
        SELECT
        (select
            b.name
           from HOPS b
          where A.id = b.id ) AS substitutesName,
        id AS substitutesSeq
          FROM HOPS_SUBSTITUTES A
         WHERE A.delete_id IS NULL
        <if test="id != null">
            AND A.hop_id = #{id}
        </if>
    </select>

    <select id="Hop.selectHopUsedForList" parameterType="Hop" resultType="Hop">
        <!-- 맥주 홉 목록 조회 -->
        SELECT
        A.used_for usedFor,
        A.use_code usedForCode,
        (SELECT B.name
        FROM COMMON_CODE B
        WHERE common_set = 'use_code'
        AND B.common_code = A.use_code) as usedForName
        FROM HOPS_USED_FOR A
        WHERE A.delete_id IS NULL
        AND
        <if test="id != null">id = #{id}</if>
    </select>

    <select id="Hop.selectAromaList" resultType="Hop">
        <!-- 맥주 홉 목록 조회 -->
        SELECT
        attribute1 aromaCode,
        attribute1desc aromaName
        FROM COMMON_CODE
        WHERE common_set = 'aroma_code'
    </select>

</mapper>
