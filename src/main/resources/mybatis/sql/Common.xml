<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Common">

    <!-- 공통코드 -->
    <sql id="Common.selectCode">
        SELECT
            COMMON_SET    commonSet,
            COMMON_CODE   commonCode,
            NOTES         notes,
            NAME          name,
            INSERT_ID     insertId,
            INSERT_DATE   insertDate,
            UPDATE_ID     updateId,
            UPDATE_DATE   updateDate,
            DELETE_ID     deleteId,
            DELETE_DATE   deleteDate
          FROM brewduckdatabase.COMMON_CODE
    </sql>

    <select id="Common.selectCodeMaster"
            resultType="Common">
        <include refid="Common.selectCode" />
       GROUP BY COMMON_SET
    </select>

    <select id="Common.selectCodeList"
            resultType="Common">
        <include refid="Common.selectCode" />
    </select>

    <!-- 성별 리스트  -->
    <select id="Common.selectGenderList"
            resultType="Common">
        <include refid="Common.selectCode" />
        WHERE GROUP_CODE = '2100'
     ORDER BY GROUP_CODE,
              DISPLAY
    </select>

    <!-- 월 리스트 -->
    <select id="Common.selectMonthList"
            resultType="Common">
        <include refid="Common.selectCode" />
        WHERE GROUP_CODE = '0000'
     ORDER BY GROUP_CODE,
               TO_NUMBER(DISPLAY)
    </select>

    <!-- 메인 카테고리 리스트 -->
    <select id="Common.selectMainCategoryList"
            resultType="Common">
        SELECT
            CODE AS code,
            CODE_NAME AS codeName
          FROM CODES
        WHERE GROUP_CODE = '1000'
     ORDER BY GROUP_CODE,
        TO_NUMBER(DISPLAY)
    </select>

    <!-- 메인 카테고리 -->
    <select id="Common.selectMainCategory"
            resultType="Common">
        <include refid="Common.selectCode" />
        WHERE GROUP_CODE = '1000'
          AND CODE = #{code}
          AND ROWNUM = 1
    </select>

    <!-- 서브 카테고리 -->
    <select id="Common.selectSubCategory"
            resultType="Common">
        <include refid="Common.selectCode" />
        WHERE PARENT_CODE = #{parentCode}
        AND CODE = #{code}
        AND ROWNUM = 1
    </select>

    <!-- 서브 카테고리 리스트 -->
    <select id="Common.selectSubCategoryList"
            resultType="Common">
        <include refid="Common.selectCode" />
        <if test="parentCode != null">
        WHERE PARENT_CODE = #{parentCode}
        </if>

        ORDER BY GROUP_CODE,
        TO_NUMBER(DISPLAY)
    </select>

    <!-- 지역(시,군) 리스트 -->
    <select id="Common.selectMainAreaList"
            resultType="Common">
        <include refid="Common.selectCode" />
        WHERE GROUP_CODE = '2300'
        ORDER BY GROUP_CODE,
        TO_NUMBER(DISPLAY)
    </select>

    <!-- 지역(동,읍) 리스트 -->
    <select id="Common.selectSubAreaList"
            resultType="Common">
        <include refid="Common.selectCode" />
        <if test="parentCode != null">
            WHERE PARENT_CODE = #{parentCode}
        </if>
        ORDER BY GROUP_CODE,
        TO_NUMBER(DISPLAY)
    </select>

    <!-- 업로드 이미지 정보 저장 -->
    <insert id="Common.insertImage"
            parameterType="Common">
        <!-- 프로필 생성 -->
        INSERT INTO IMAGES (
        IMAGE_ID
        ,TALENT_ID
        ,IMAGE_NAME
        ,DELETE_YN
        ,CREATE_DATE
        ) values (
         #{imageId}
        ,#{talentId}
        ,#{imageName}
        ,#{deleteYn}
        ,sysdate
        )
    </insert>

    <select id="Common.selectImageId"
            resultType="int">
        SELECT NVL(MAX(IMAGE_ID),0) + 1 AS imageId
        FROM IMAGES
    </select>

    <select id="Common.selectMovieId"
            resultType="int">
        SELECT NVL(MAX(MOVIE_ID),0) + 1 AS movieId
        FROM MOVIES
    </select>

<!--    <select id="Common.nextIntegerId" resultType="Board">
        SELECT IFNULL(MAX(SORT_ORDR),0)+1 AS nextIntegerId  FROM BOARD
            WHERE BBS_ID = '3'
    </select>-->

    <sql id="Common.selectBoard">
        SELECT
            B.BBS_NM          bbsNm,
            B.BBS_EN_NM       bbsEnNm,
            A.NTT_ID          nttId,
            A.BBS_ID          bbsId,
            A.NTT_SJ          nttSj,
            A.NTT_CN          nttCn,
            (select COUNT(C.ANSWER_NO) FROM BOARD_COMMENT C WHERE A.BBS_ID = C.BBS_ID AND A.NTT_ID = C.NTT_ID)    countNum,
            substring(A.NTT_CN,1,15)      nttSjSub,
            substring(A.NTT_CN,1,40)      nttCnSub,
            (select D.id from account D where D.name = A.INSERT_ID)     boardId,
            A.INSERT_ID       insertId,
            substring(A.INSERT_DATE, 1, 10)  insertDate,
            A.RDCNT           rdcnt
            FROM BOARD A,
            BOARD_MASTER B
       WHERE A.USE_AT = 'Y'
         AND A.BBS_ID = B.BBS_ID
    </sql>

    <select id="Common.selectBoardName" parameterType="Board" resultType="Board">
        SELECT
            BBS_ID      bbsId,
            BBS_NM      bbsNm,
            BBS_EN_NM   bbsEnNm
            FROM BOARD_MASTER
        WHERE BBS_ID = #{bbsId}
          AND DELETE_ID IS NULL
    </select>

    <select id="Common.selectBoardList"  parameterType="Board" resultType="Board">
        <include refid="Common.selectBoard" />

            <if test="sort != null and sort == 'subject'">
              AND A.NTT_SJ like CONCAT('%', #{searchVal}, '%')
            </if>
            <if test="sort != null and sort == 'content'">
                AND A.NTT_CN like CONCAT('%', #{searchVal}, '%')
            </if>
            <if test="sort != null and sort == 'userId'">
                AND A.INSERT_ID like CONCAT('%', #{searchVal}, '%')
            </if>
        AND A.BBS_ID = #{bbsId}

        AND A.DELETE_ID IS NULL

    </select>

    <select id="Common.selectBoardDetail" parameterType="Board" resultType="Board">
        <!-- 게시판 상세 조회 -->
        <include refid="Common.selectBoard" />
        AND A.DELETE_ID IS NULL
        <if test="nttId != null">
            AND A.NTT_ID = #{nttId}
        </if>
    </select>

    <select id="Common.editBoard" parameterType="Board" resultType="Board">
        <!-- 게시판 상세 조회 -->
        <include refid="Common.selectBoard" />
        AND A.DELETE_ID IS NULL
        <if test="nttId != null">
            AND A.NTT_ID = #{nttId}
        </if>
    </select>


    <insert id="Common.writeBoardArticle" parameterType="Board" >

			INSERT INTO BOARD
			(
			 BBS_ID,
			 NTT_NO,
			 NTT_SJ,
			 NTT_CN,
			 SORT_ORDR,
			 USE_AT,
			 ANSWER_AT,
			 ATCH_FILE_ID,
			 ATCH_COVER_FILE_ID,
			 INSERT_ID,
			 INSERT_DATE
			 )
			VALUES
			(
			#{bbsId},
			#{nttNo},
			#{nttSj},
			#{nttCn},
			#{sortOrder},
            #{useAt},
			#{answerAt},
			#{atchFileId},
			#{atchCoverFileId},
			#{insertId},
			SYSDATE()
			)

    </insert>

    <update id="Common.updateBoardArticle" parameterType="Board">
        <![CDATA[
            UPDATE brewduckdb.BOARD
            SET
              NTT_SJ = #{nttSj}
              ,NTT_CN = #{nttCn}
              ,ATCH_FILE_ID = #{atchFileId}
              ,UPDATE_ID = #{updateId}
              ,UPDATE_DATE = SYSDATE()
            WHERE NTT_ID = #{nttId}
              AND BBS_ID = #{bbsId}
              AND DELETE_ID is null
		]]>
    </update>

    <insert id="Common.insertBoardMaster" parameterType="Board">
		<![CDATA[
			INSERT INTO BOARD_MASTER (
              BBS_TY_CODE,
              BBS_ATTRB_CODE,
              BBS_NM,
              BBS_INTRCN,
			  REPLY_POSBL_AT,
			  FILE_ATCH_POSBL_AT,
			  ATCH_POSBL_FILE_NUMBER,
			  ATCH_POSBL_FILE_SIZE,
			  TMPLAT_ID,
			  USE_AT,
			  insert_id,
              insert_date
		   ) VALUES (
		      #{bbsTyCode},
		      #{bbsAttrbCode},
		      #{bbsNm},
		      #{bbsIntrcn},
			  #{replyPosblAt},
			  #{fileAtchPosblAt},
			  #{posblAtchFileNumber},
			  #{posblAtchFileSize},
			  #{tmplatId},
			  #{useAt},
			  #{frstRegisterId},
			  SYSDATE()
			 )
		]]>
    </insert>

<!--    <select id="Common.selectBoardList"
            resultType="Board">
        SELECT
            A.BBS_ID          bbs_id,
            A.BBS_NM          bbs_nm,
            A.BBS_TY_CODE     ty_code,
            A.BBS_ATTRB_CODE  attrb_code,
            A.TMPLAT_ID       tmplat_id,
            B.NTT_ID          b_ntt_id,
            B.BBS_ID          b_bbs_id,
            B.NTT_NO          b_ntt_no,
            B.NTT_SJ          b_ntt_sj,
            B.NTT_CN          b_ntt_cn,
            B.ANSWER_AT       b_answer_at,
            B.PARNTSCTT_NO    b_parntsctt_no,
            B.ANSWER_LC       b_answer_lc,
            B.SORT_ORDR       b_sort_order,
            B.RDCNT           b_rdcnt,
            B.USE_AT          b_use_at,
            B.NTCE_BGNDE      b_ntce_bgnde,
            B.NTCE_ENDDE      b_ntce_endde,
            B.NTCR_ID         b_ntcr_id,
            B.NTCR_NM         b_ntcr_nm,
            B.PASSWORD        b_password,
            B.ATCH_FILE_ID    b_atch_file_id
            FROM BOARD_MASTER A,
            BOARD B
       WHERE A.USE_AT = 'Y'
         AND A.BBS_ID = B.BBS_ID
         AND A.BBS_ID = #{bbsId}
    </select>-->

    <select id="Common.selectCommentList"
            resultType="Board">
        SELECT
            NTT_ID        nttId,
            BBS_ID        bbsId,
            ANSWER_NO     answerNo,
            WRTER_ID      wrterId,
            WRTER_NM      wrterNm,
            ANSWER        answer,
            USE_AT        useAt,
            INSERT_DATE   insertDate,
            INSERT_ID     insertId,
            UPDATE_DATE   updateDate,
            UPDATE_ID     updateId,
            PASSWORD      password
         FROM BOARD_COMMENT
        WHERE USE_AT = 'Y'
          AND NTT_ID = #{nttId}
          AND BBS_ID = #{bbsId}
    </select>

    <update id="deleteBoardArticle" parameterType="Board">
        <![CDATA[
        UPDATE brewduckdb.BOARD
        SET delete_id = #{deleteId}
        ,delete_date = SYSDATE()
        WHERE NTT_ID = #{nttId}
        AND BBS_ID = #{bbsId}
         ]]>
    </update>

    <select id="getNewPost" resultType="Board">
        SELECT
        A.NTT_ID      nttId,
        A.NTT_SJ      nttSj,
        A.NTT_CN      nttCn,
        A.ATCH_FILE_ID atchFileId,
        (SELECT B.FILENAME FROM FILEINFO B WHERE A.ATCH_FILE_ID = B.SEQ) atchFileName,
        (SELECT C.FILENAME FROM FILEINFO C WHERE A.ATCH_COVER_FILE_ID = C.SEQ) atchCoverFileName,
        A.INSERT_ID   insertId,
        A.INSERT_DATE insertDate
        from BOARD A
       WHERE 1 = 1
        AND DELETE_ID is null
        <if test="bbsId != null">
            AND A.BBS_ID = #{bbsId}
        </if>
        order by A.INSERT_DATE
        DESC limit 5
    </select>

    <select id="selectReplyList" parameterType="Board" resultType="Board">
        SELECT
          A.ANSWER_NO     answerNo,
          A.BBS_ID        bbsId,
          A.NTT_ID        nttId,
          A.INSERT_ID     insertId,
          A.INSERT_DATE   insertDate,
          A.ANSWER        answer,
          A.WRTER_NM      wrterNm,
          A.WRTER_ID      wrterId,
          (select B.id
          from account B
          where B.name = A.INSERT_ID)     boardId
        FROM BOARD_COMMENT  A
        WHERE USE_AT = 'Y'
        AND A.BBS_ID = #{bbsId}
        AND A.NTT_ID = #{nttId}
    </select>


    <insert id="writeReply" parameterType="Board">
        INSERT INTO BOARD_COMMENT(
           NTT_ID
          ,BBS_ID
          ,ANSWER_NO
          ,WRTER_ID
          ,WRTER_NM
          ,ANSWER
          ,USE_AT
          ,INSERT_DATE
          ,INSERT_ID
        ) VALUES (
           #{nttId}
          ,#{bbsId}
          ,(SELECT * FROM (SELECT CASE COUNT(*) WHEN 0 THEN 1 ELSE MAX(ANSWER_NO)+1 END
          FROM BOARD_COMMENT WHERE BOARD_COMMENT.NTT_ID =#{nttId}
          AND BOARD_COMMENT.BBS_ID =#{bbsId})NEXT)
          ,#{wrterId}
          ,#{wrterNm}
          ,#{amswer}
          ,#{useAt}
          ,SYSDATE()
          ,#{insertId}
        )
    </insert>

    <insert id="Common.deleteReply" parameterType="Board">
		<![CDATA[
             INTO BOARD_COMMENT(
               NTT_ID
              ,BBS_ID
              ,ANSWER_NO
              ,WRTER_ID
              ,WRTER_NM
              ,ANSWER
              ,USE_AT
              ,INSERT_DATE
              ,INSERT_ID
            ) VALUES (
               #{nttId}
              ,#{bbsId}
              ,(SELECT * FROM (SELECT CASE COUNT(*) WHEN 0 THEN 1 ELSE MAX(ANSWER_NO)+1 END
              FROM BOARD_COMMENT WHERE BOARD_COMMENT.NTT_ID =#{nttId}
              AND BOARD_COMMENT.BBS_ID =#{bbsId})NEXT)
              ,#{wrterId}
              ,#{wrterNm}
              ,#{amswer}
              ,#{useAt}
              ,SYSDATE()
              ,#{insertId}
            )
		]]>
    </insert>


    <select id="Common.countReply" parameterType="Board" resultType="Board">

        select COUNT(ANSWER_NO) as countNum FROM BOARD_COMMENT WHERE BBS_ID = #{bbsId} AND NTT_ID = #{nttId};

    </select>


    <insert id="Common.insertNoticeFile" parameterType="FileInfo">
        <!-- 글등록 -->
        INSERT INTO FILEINFO (
        seq
        ,filename
        ,file_no
        ,filesize
        ,real_filename
        ,filemime
        ) values (
        #{seq}
        ,#{filename}
        ,#{fileNo}
        ,#{filesize}
        ,#{realFilename}
        ,#{filemime}
        )
    </insert>

    <update id="Common.updateNoticeFile" parameterType="FileInfo">
        <!-- 글등록 -->
        UPDATE FILEINFO SET
        filename = #{filename}
        , filesize = #{filesize}
        WHERE seq = #{seq} AND file_no = #{fileNo}
    </update>

    <select id="Common.selectFileSeq" resultType="int">
        SELECT
        IFNULL(MAX(SEQ)+1,1) AS seq
        FROM FILEINFO
    </select>

    <select id="Common.selectFileNo" parameterType="int" resultType="int">
        SELECT
        IFNULL(MAX(FILE_NO)+1,1) AS fileNo
        FROM FILEINFO
        WHERE seq = #{seq}
    </select>

    <select id="Common.selectFileCount" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM FILEINFO
        WHERE seq = #{seq} AND del_yn='N'
    </select>

    <update id="Common.deleteNoticeFile" parameterType="FileInfo">
        <!-- 파일삭제 -->
        UPDATE FILEINFO SET
        del_yn = 'Y'
        WHERE seq = #{seq} AND file_no = #{fileNo}
    </update>


    <select id="Common.selectUserList" parameterType="Admin" resultType="Admin">
         SELECT id               id
              ,name              name
              ,email             email
              ,authority         authority
              ,activation        activation
              ,substring(insert_date, 1, 10)  insertDate
          FROM account
          ORDER BY id ASC;
    </select>

    <update id="Common.updateHitCount" parameterType="Board">

        UPDATE BOARD SET
          RDCNT = RDCNT +1
      WHERE NTT_ID = #{nttId}

    </update>

</mapper>
